name: Validate ArgoCD Application

on:
  pull_request:
    paths:
      - 'apps/argocd-apps/**.yaml'
      - 'setup/argocd-apps/**.yaml'
  merge_group:

jobs:
  validate-argocd-app:
    name: Validate Changed ArgoCD App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Set up Helm
        uses: azure/setup-helm@v4

      - name: Install yq
        uses: mikefarah/yq@v4

      - name: Fetch base branch
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1

      - name: Identify changed Application manifest
        id: changed_file
        run: |
          FILE=$(git diff --name-only origin/${{ github.base_ref }} | \
                 grep -E '^(apps|setup)/argocd-apps/.*\.ya?ml$' | head -n 1)
          if [ -z "$FILE" ]; then
            echo "No application file changed. Skipping."
            exit 1
          fi
          echo "app_file=$FILE" >> $GITHUB_OUTPUT

      - name: Extract chart info
        id: chart
        run: |
          file="${{ steps.changed_file.outputs.app_file }}"
          echo "🔍 Parsing $file"
          chart=$(yq e 'select(di == 0) | .spec.source.chart' "$file")
          repo=$(yq e 'select(di == 0) | .spec.source.repoURL' "$file")
          version=$(yq e 'select(di == 0) | .spec.source.targetRevision' "$file")

          # Add values of updated chart to its own file
          mkdir -p charts
          yq e 'select(di == 0) | .spec.source.helm.values' "$file" > charts/values.yaml

          echo "chart=$chart" >> $GITHUB_OUTPUT
          echo "repo=$repo" >> $GITHUB_OUTPUT
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Prepare ct config
        run: |
          cat <<EOF > ct-config.yaml
          chart-dirs:
            - charts
          chart-repos:
            - testrepo=${{ steps.chart.outputs.repo }}
          check-version-increment: false
          debug: true
          EOF

      - name: Pull chart
        run: |
          helm repo add testrepo "${{ steps.chart.outputs.repo }}"
          helm repo update
          helm pull testrepo/${{ steps.chart.outputs.chart }} \
            --version "${{ steps.chart.outputs.version }}" \
            --untar --untardir pulled-chart

      - name: Lint chart
        run: |
            --config ct-config.yaml \
            --charts "pulled-chart/${{ steps.chart.outputs.chart }}" \
            --helm-lint-extra-args '--strict' \

      - name: Install chart using ct
        run: |
          ct install \
            --config ct-config.yaml \
            --charts "pulled-chart/${{ steps.chart.outputs.chart }}" \
            --helm-extra-args '--timeout 10m' \
            --namespace smoke-test \

      - name: Upload ct logs
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: ct-logs
          path: |
            .ct/lint.log
            .ct/install.log
          if-no-files-found: ignore

